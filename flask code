from flask import Flask, render_template, request, jsonify

import pymongo

myapp = Flask(__name__)

client = pymongo.MongoClient("mongodb://localhost:27017")

db = client["Blackcoffer"]

collection = db["project"]

def get_data_for_filter(selected_filter):

data = collection.aggregate([

{

"$group": {

"_id": f"${selected_filter}",

"count": {"$sum": 1}

}

},

{

"$sort": {"count": -1}

}

])

filter_data = {}

for entry in data:

filter_data[entry["_id"]] = entry["count"]

return filter_data

@myapp.route('/')

def index():

return render_template('index.html')

@myapp.route('/get_data', methods=['POST'])

def get_data():

selected_filter = request.json.get('filter', 'topic') # Default to 'topic' if filter is not specified

filter_data = get_data_for_filter(selected_filter)

labels = list(filter_data.keys())

counts = list(filter_data.values())

return jsonify({'labels': labels, 'counts': counts})

if __name__ == '__main__':

myapp.run(debug=True, port=5001)
